{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/navigation/navbar.component.css","webpack:///./src/app/navigation/navbar.component.html","webpack:///./src/app/navigation/navbar.component.ts","webpack:///./src/app/repositories/repositories.component.css","webpack:///./src/app/repositories/repositories.component.html","webpack:///./src/app/repositories/repositories.component.ts","webpack:///./src/app/repository.ts","webpack:///./src/app/routing/routing.module.ts","webpack:///./src/app/search-form/search-form.component.css","webpack:///./src/app/search-form/search-form.component.html","webpack:///./src/app/search-form/search-form.component.ts","webpack:///./src/app/search-request.service.ts","webpack:///./src/app/search.ts","webpack:///./src/app/upper-case.pipe.ts","webpack:///./src/app/user.ts","webpack:///./src/app/user/search.component.css","webpack:///./src/app/user/search.component.html","webpack:///./src/app/user/search.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div>\\n    <app-navbar></app-navbar>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'GitHub Search';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n// import {HttpClient} from '@angular/common/http';\nimport {HttpClientModule} from '@angular/common/http';\nimport { NgProgressModule } from '@ngx-progressbar/core';\nimport { NgProgressHttpModule } from '@ngx-progressbar/http';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navigation/navbar.component';\nimport { SearchComponent } from './user/search.component';\nimport { RepositoriesComponent } from './repositories/repositories.component';\nimport {RoutingModule} from './routing/routing.module';\nimport { RouterModule } from '@angular/router';\nimport { SearchFormComponent } from './search-form/search-form.component';\nimport {FormsModule} from '@angular/forms';\nimport {SearchRequestService} from './search-request.service';\nimport { UpperCasePipe } from './upper-case.pipe';\n\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    SearchComponent,\n    RepositoriesComponent,\n    SearchFormComponent,\n    UpperCasePipe\n  ],\n  imports: [\n    BrowserModule,\n      RoutingModule,\n      RouterModule,\n      FormsModule,\n      NgProgressModule.forRoot(),\n      NgProgressHttpModule,\n      // HttpClient,\n      HttpClientModule\n  ],\n  providers: [SearchRequestService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".navbar-dark a {\\n    /*float: left;*/\\n    display: block;\\n    color: dodgerblue;\\n    text-align: center;\\n    padding: 15px 17px;\\n    font-size: 20px;\\n    text-align: center;\\n}\\n\\n\\n* {box-sizing: border-box;}\\n\\n\\n.navbar-dark {\\n    overflow: hidden;\\n    background-color: #056b5b;\\n}\\n\"","module.exports = \"<div class=\\\"navbar-dark\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/users\\\" routerLinkActive=\\\"active\\\">Users</a>\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/repository\\\" routerLinkActive=\\\"active\\\">Repositories</a>\\n</div>\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"/*body*/\\n.container{\\n    margin-top: 5rem;\\n}\\np {\\n    text-indent: 2rem;\\n    font-family: SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace;\\n}\\n.btn{\\n    margin-top: 30px;\\n    background-color: #056b5b;\\n}\\n.seeMorebtn{\\n    text-align: center;\\n}\\n.display{\\n    float: left;\\n    margin-bottom: 0.3rem;\\n}\\n/*user form*/\\n.search-form p {\\n    font-size: 30px;\\n    margin: 0;\\n    justify-content: left;\\n    align-items: left;\\n    /*position: sticky;*/\\n}\\n\\n\"","module.exports = \"<div class=\\\"container\\\">\\n    <ng-progress></ng-progress>\\n    <div class=\\\"row \\\">\\n    <div class=\\\"col-md-9 text-center\\\">\\n      <app-search-form (getName)='searchRepos($event)'></app-search-form>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-11\\\">\\n      <div >\\n        <div class=\\\"table\\\">\\n          <table class=\\\"table\\\">\\n            <tbody>\\n             <tr *ngFor=\\\" let repository of gitRepoRequest.searchRepo\\\" >\\n              <td>\\n                <h4>\\n                  <a style=\\\"text-align: center\\\" href=\\\"{{repository.html_url}} \\\" >{{repository.name}}</a>\\n                </h4>\\n                <p > Repository Owner:\\n                  <a href=\\\"{{repository.owner.html_url}}\\\">{{repository.owner.login}}</a>\\n                </p>\\n                <p>Date Created : {{repository.created_at|date}}</p>\\n                <p>Description : {{repository.description}}</p>\\n              </td>\\n            </tr>\\n            </tbody>\\n          </table>\\n          <hr>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {SearchRequestService} from '../search-request.service';\nimport {Repository} from '../repository';\n\n\n@Component({\n  selector: 'app-repositories',\n  templateUrl: './repositories.component.html',\n    providers: [SearchRequestService],\n  styleUrls: ['./repositories.component.css']\n})\nexport class RepositoriesComponent implements OnInit {\n\n    repository: Repository;\n    public searchRepo: string;\n    public resultCount = 12;\n\n    searchRepos() {\n        this.searchRepo = '';\n        this.resultCount = 10;\n        this.getDataFunction();\n\n    }\n\n    constructor(public gitRepoRequest: SearchRequestService ) { }\n\n  ngOnInit() {\n        this.resultCount = 5;\n      this.gitRepoRequest.gitRepos(this.searchRepo);\n  }\n\n\n      getDataFunction() {\n          this.gitRepoRequest.gitRepos(this.searchRepo);\n\n      }\n\n\n}\n","export class Repository {\n    constructor(public name: string, public html_url: string, public description: string, public created_at: Date) {\n\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport { SearchComponent } from '../user/search.component';\nimport {RepositoriesComponent} from '../repositories/repositories.component';\n\n\nconst routes: Routes = [\n    {path: 'users', component: SearchComponent},\n    {path: 'repository', component: RepositoriesComponent},\n    {path: '', redirectTo: '/users', pathMatch: 'full'},\n\n\n\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n      RouterModule.forRoot(routes)\n  ],\n  declarations: []\n})\nexport class RoutingModule { }\n","module.exports = \"\\n\\n\\ninput {\\n     width: 100%;\\n    padding: 12px;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    box-sizing: border-box;\\n    margin-top: 6px;\\n    margin-bottom: 16px;\\n}\\n\\n\\ninput[type=submit] {\\n    background-color: #056b5b;\\n    color: white;\\n    text-align: center;\\n    /* width: 50%; */\\n}\\n\\n\\nbutton {\\n    background-color: #056b5b;\\n    color: white;\\n    padding: 14px 20px;\\n    margin: 8px 0;\\n    border: none;\\n    cursor: pointer;\\n    /* width: 100%; */\\n    opacity: 0.9;\\n}\\n\\n\\nform {\\n    background-color: #f1f1f1;\\n    padding: 20px;\\n    width: 100vh;\\n     /*height: 100%; */\\n}\"","module.exports = \"  <form (ngSubmit)=\\\"searchFor(searchForm)\\\" #searchForm=\\\"ngForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"find\\\" placeholder=\\\"Enter username\\\"[(ngModel)]= \\\"searchInfo.find\\\"  #find='ngModel'>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-group\\\"> Search</button>\\n  </div>\\n</form>\\n\"","import {Component, OnInit, Output, EventEmitter} from '@angular/core';\nimport {Search} from '../search';\n\n@Component({\n  selector: 'app-search-form',\n  templateUrl: './search-form.component.html',\n  styleUrls: ['./search-form.component.css']\n})\nexport class SearchFormComponent implements OnInit {\n    searchInfo = new Search('');\n    @Output() getName = new EventEmitter<Search>();\n\n    searchFor(data){\n        this.getName.emit(data.value.find);\n        console.log(data.value.find)\n        data.reset();\n    }\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {environment} from '../environments/environment';\nimport {Repository} from './repository';\nimport {User} from './user';\nimport { HttpClient} from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchRequestService {\n    repository: Repository;\n    users: User;\n    newRepository: any;\n    searchRepo: any;\n\n    constructor(private http: HttpClient) {\n        this.repository = new Repository('', '', '', new Date());\n        this.users = new User('', '', '', 0, '', new Date(), 0, 0);\n    }\n\n    githubUser(searchName) {\n        interface ApiResponse {\n            name: string;\n            html_url: string;\n            description: string;\n            created_at: Date;\n            login: string;\n            public_repos: number;\n            followers: number;\n            following: number;\n            avatar_url: string;\n        }\n\n        const promise = new Promise((resolve) => {\n            this.http.get<ApiResponse>('https://api.github.com/users/' + searchName + '?access_token=' + environment.myApi).toPromise().then(getResponse => {\n                this.users.name = getResponse.name;\n                this.users.html_url = getResponse.html_url;\n                this.users.login = getResponse.login;\n                this.users.avatar_url = getResponse.avatar_url;\n                this.users.public_repos = getResponse.public_repos;\n                this.users.created_at = getResponse.created_at;\n                this.users.followers = getResponse.followers;\n                this.users.following = getResponse.following;\n                resolve();\n            },);\n        });\n        return promise;\n\n    }\n\n    gitUserRepos(searchMe) {\n        interface ApiResponse {\n            name: string;\n            description: string;\n            created_at: Date;\n        }\n\n        const myPromise = new Promise((resolve, reject) => {\n            this.http.get<ApiResponse>('https://api.github.com/users/' + searchMe + '/repos?order=created&sort=asc?access_token=' + environment.myApi).toPromise().then(getRepoResponse => {\n                this.newRepository = getRepoResponse;\n                resolve();\n            }, error => {\n                reject(error);\n            });\n        });\n        return myPromise;\n    }\n\n\n    gitRepos(searchName) {\n        interface ApiResponse {\n            items: any;\n        }\n\n        const promise = new Promise((resolve, reject) => {\n            this.http.get<ApiResponse>('https://api.github.com/search/repositories?q=' + searchName + ' &per_page=10 ' + environment.myApi).toPromise().then(getRepoResponse => {\n                this.searchRepo = getRepoResponse.items;\n\n                resolve();\n            }, error => {\n                this.searchRepo = 'error';\n                reject(error);\n            });\n        });\n        return promise;\n    }\n}\n\n\n\n","\nexport class Search {\n    public find: string;\n    constructor(find) {\n        this.find = find;\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'upperCase'\n})\nexport class UpperCasePipe implements PipeTransform {\n\n    transform(value: any): string  {\n\n        return value.toUpperCase;\n    }\n\n}\n","\nexport class User {\n    constructor(public name:string, public login: string, public avatar_url:string, public public_repos:number , public html_url: string,public created_at:Date, public followers:number ,public following:number){\n    }\n}\n","module.exports = \"\\ntable {\\n    border-collapse: collapse;\\n    width: 100%;\\n}\\n/*.table-striped > tbody > tr:nth-child(2n+1) > td, .table-striped > tbody > tr:nth-child(2n+1) > th {*/\\n/*background-color: red;*/\\n/*}*/\\n/*github user repos*/\\n.my-repos p {\\n    text-indent: 3rem;\\n    text-align: left;\\n}\\n.desc{\\n    text-align: left;\\n}\\ntr {\\n    font-size: 16px;\\n}\\na:hover {\\n    text-decoration: none;\\n}\\ntd a {\\n    font-size: 25px;\\n}\\np {\\n    text-indent: 2rem;\\n    font-family: SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace;\\n}\\n.col-md-12 {\\n    text-align: center;\\n}\\n.container {\\n    margin-top: 2rem;\\n}\\n/* profile*/\\nimg {\\n    max-width: 60%;\\n    border-radius: 600px;\\n}\\n.image-right {\\n    padding-top: 8rem;\\n    text-align: center;\\n}\\n/**/\\n\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <ng-progress></ng-progress>\\n  <div class=\\\"row \\\">\\n    <div class=\\\"col-md-12\\\">\\n      <app-search-form (getName)='findUser($event)'></app-search-form>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-7\\\">\\n      <div class=\\\"table table-striped table-bordered\\\">\\n        <h3> {{users.name}}</h3>\\n        <table class=\\\"table table-striped table-light\\\">\\n          <tbody>\\n          <tr>\\n            <th scope=\\\"row\\\">Github Username:</th>\\n              <td> <a href=\\\"{{users.html_url}}\\\" target=\\\"_blank\\\">{{users.login}}</a></td>\\n\\n          </tr>\\n          <tr>\\n            <th scope=\\\"row\\\">Repositories:</th>\\n            <td>{{users.public_repos }}</td>\\n          </tr>\\n          <tr>\\n            <th scope=\\\"row\\\">Date created:</th>\\n            <td>{{users.created_at | date}}</td>\\n          </tr>\\n          <tr>\\n            <th scope=\\\"row\\\">Followers:</th>\\n            <td>{{users.followers}}</td>\\n          </tr>\\n          <tr>\\n            <th scope=\\\"row\\\">Following</th>\\n            <td>{{users.following}}</td>\\n          </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-5 image-end\\\">\\n      <img src=\\\"{{users.avatar_url}}\\\">\\n    </div>\\n  </div>\\n  <hr>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div  class=\\\"col-md-12\\\">\\n      <h2 style=\\\"color: #056b5b\\\" > User Repositories</h2>\\n      <div class=\\\"table table-striped\\\">\\n        <table class=\\\"table\\\">\\n          <tbody>\\n          <tr *ngFor='let repository of userRepos.newRepository'>\\n            <td>\\n                <a href=\\\"{{repository.html_url}}\\\" target=\\\"_blank\\\" >{{repository.name}}</a>\\n\\n                <br>\\n              <p class=\\\"desc\\\">Description: {{repository.description}}</p>\\n              <br>\\n              <p>Date Created: {{repository.created_at | date}}</p>\\n            </td>\\n          </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {SearchRequestService} from '../search-request.service';\nimport {Repository} from '../repository';\nimport {User} from '../user';\n\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n    providers: [SearchRequestService],\n  styleUrls: ['./search.component.css']\n})\n\nexport class SearchComponent implements OnInit {\n    public searchMe = 'wanjiiru';\n    public githubUser: string;\n\n    users: User ;\n    repository: Repository;\n    public searchRepo: string;\n    public resultCount = 12;\n\n\n    findUser(username) {\n        this.githubUser = '';\n        this.searchMe  = username;\n        this.ngOnInit();\n    }\n\n\n  constructor(public githubUserRequest: SearchRequestService, public userRepos: SearchRequestService) { }\n\n  ngOnInit() {\n      this.githubUserRequest.githubUser(this.searchMe);\n      this.users = this.githubUserRequest.users;\n      this.userRepos.gitUserRepos(this.searchMe);\n      console.log(this.userRepos);\n  }\n\n\n    searchRepos() {\n        this.searchRepo = '';\n        this.resultCount = 10;\n\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n    myApi: '8d519577963aecac686226e04976f1c31f02b53a'\n\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}